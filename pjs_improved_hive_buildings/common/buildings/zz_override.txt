## 02_government_buildings

building_sentinel_posts = {
	base_buildtime = 480
	category = government

	potential = {
		exists = owner
		owner = { is_gestalt = yes }
	}

	destroy_trigger = {
		exists = owner
		NOT = {
			owner = { is_gestalt = yes }
		}
	}

	planet_modifier = {
		job_patrol_drone_add = 3
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 480
		}
		upkeep = {
			energy = 3
		}
	}

	prerequisites = {
		"tech_planetary_government"
	}

	triggered_desc = {
		text = job_patrol_drone_effect_desc
	}

	show_tech_unlock_if = {
		is_gestalt = yes
	}

	ai_weight = {
		weight = 0
		modifier = {
			weight = 10
			planet_crime > 15
			gai_build_building = yes
		}
		modifier = {
			weight = 1
			free_building_slots = 0
		}
	}

	on_built = {
		planet = { set_timed_planet_flag = { flag = gai_maniacs_flag_thanks_man days = 2 } }
	}
}

## 07_amenity_buildings

building_hive_warren = {
	base_buildtime = 480

	category = amenity

	potential = {
		exists = owner
		owner = { is_hive_empire = yes }
	}

	allow = {
		gai_simple_allow = yes
	}

	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				owner = { is_ai = yes }
				years_passed < 3
			}#Blow up the one on the homeworld.
			AND = {
				planet = {
					free_building_slots = 0
					free_jobs = 0
					free_housing > 10
					owner = {
						is_ai = yes
					}
				}
			}
			NOR = {
				owner = { is_hive_empire = yes }
			}
		}
	}

	convert_to = {
		building_luxury_residence
		building_drone_storage
		building_communal_housing
	}

	planet_modifier = {
		planet_housing_add = 7
		job_maintenance_drone_add = 2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 480
		}
		upkeep = {
			energy = 2
		}
	}

	upgrades = {
		"building_expanded_warren"
	}

	ai_weight = {
		weight = 0
		modifier = {
			weight = 7000 #High weight to gurantee that if the below is true then the AI should build it
			free_housing < 5 #Prevents the AI from running out of residences when nearly out of tiles
			OR = {
				free_jobs > 0 #prevents spamming of residence buildings when no jobs are open
				AND = {
					free_housing <= 0 #Prevents the AI from running out of residences when nearly out of tiles
					not = { any_owned_pop = { is_unemployed = yes } }
				}
			}
			free_district_slots = 0 #Do not build when city districts can still be built
			NOT = { is_planet_class = pc_habitat }
		}
		modifier = {
			weight = 7000 #High weight to gurantee that if the below is true then the AI should build it
			is_planet_class = pc_habitat
			free_housing < 4
			OR = {
				not = { any_owned_pop = { is_unemployed = yes } }
				free_jobs > 0 #Servitors can run into a situation with no houses but free jobs open
			}
		}
		modifier = {
			factor = 0
			has_building = building_hive_warren
			owner = { has_technology = tech_housing_2 }
		}
	}
}

building_expanded_warren = {
	base_buildtime = 480
	can_build = no

	category = amenity

	potential = {
		has_building = building_hive_warren
	}

	allow = {
		has_upgraded_capital = yes
	}

	show_tech_unlock_if = {
		owner = { is_hive_empire = yes }
	}

	destroy_trigger = {
		exists = owner
		NOR = {
			owner = { is_hive_empire = yes }
		}
	}

	convert_to = {
		building_paradise_dome
		building_drone_megastorage
		building_communal_housing_large
	}

	planet_modifier = {
		planet_housing_add = 12
		job_maintenance_drone_add = 3
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_domination_imperious_architecture
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 500
			rare_crystals = 50
		}
		upkeep = {
			energy = 2
			rare_crystals = 1
		}
	}


	prerequisites = {
		"tech_housing_2"
	}

	ai_weight = {
		weight = 0#Needs to be higher than base building to gurantee the AI upgrades before it builds a new regular housing building
		modifier = {
			weight = 1
			gai_has_crystals = yes
			owner = {
				NOT = { has_country_flag = gai_new_crystal_building }
			}
			NOT = {
				free_jobs = 0
				free_housing > 0
				free_amenities > 0
			}
		}
	}#Should always upgrade

	on_queued = {
		planet = {
			owner = { set_timed_country_flag = { flag = gai_new_crystal_building days = 510 } }
		}
	}
}

building_maintenance_depot = {
	base_buildtime = 360
	category = amenity

	potential = {
		owner = { is_gestalt = yes }
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_gestalt = no }
			AND = {
				owner = { is_ai = yes }
				free_amenities > 30
				free_building_slots = 0
			}
		}
	}



	planet_modifier = {
		job_maintenance_drone_add = 4
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_swapped_tradition = tr_domination_modular_depot
			}
		}
		modifier = {
			planet_housing_add = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_swapped_tradition = tr_synchronicity_integrated_preservation
			}
		}
		modifier = {
			job_maintenance_drone_add = 3
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 360
		}
		upkeep = {
			energy = 1
		}
	}

	prerequisites = {
		"tech_planetary_government"
	}

	show_tech_unlock_if = {
		is_gestalt = yes
	}

	triggered_desc = {
		text = job_maintenance_drone_effect_desc
	}

	ai_weight = {
		weight = 0
		modifier = {
			weight = 500
			free_amenities < 3
			OR = {
				free_jobs < 3
				free_amenities < -3
				NOT = { has_building = building_maintenance_depot }
			}
			if = {
				limit = {
					owner = { is_hive_empire = yes }
				}
				has_building = building_spawning_pool
			}
			if = {
				limit = {
					owner = { has_valid_civic = civic_machine_servitor }
				}
				OR = {
					has_building = building_organic_sanctuary
					has_building = building_organic_paradise
				}
			}
		}
		modifier = {
			weight = 1
			free_building_slots = 0
		}#Repairs
	}

	on_built = {
		planet = { set_timed_planet_flag = { flag = gai_maniacs_flag_thanks_man days = 2 } }
	}
}
